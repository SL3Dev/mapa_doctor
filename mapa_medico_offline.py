import streamlit as st
from graphviz import Digraph
from PyPDF2 import PdfReader
from docx import Document
import tempfile
import os
from graphviz.backend import execute

# --- Verifica√ß√£o de Instala√ß√£o do Graphviz --- #
def check_graphviz_installed():
    try:
        execute.run_check(['dot', '-V'])
        return True
    except execute.ExecutableNotFound:
        return False

GRAPHVIZ_INSTALLED = check_graphviz_installed()

# --- Dados M√©dicos Aprimorados com √çcones --- #
RELACOES_MEDICAS = {
    "ü¶† Les√£o Celular": {
        "üìå pode_ser": ["üîÑ Revers√≠vel", "‚ùå Irrevers√≠vel"],
        "‚ö° causas": ["ü´Å Hip√≥xia", "‚ò†Ô∏è Toxinas", "ü¶† Infec√ß√µes"],
        "üìö exemplo": ["Paciente com hepatite alco√≥lica"]
    },
    "ü´Å Hip√≥xia": {
        "üî¨ causa": ["üî• Estresse Oxidativo (ROS)", "üß¨ Dano Mitocondrial"],
        "‚ö†Ô∏è leva_a": ["üíÄ Necrose", "‚ö∞Ô∏è Apoptose"],
        "üìö exemplo": ["Isquemia mioc√°rdica em IAM"]
    },
    "üî• Inflama√ß√£o": {
        "üëÄ caracteriza_se_por": ["ü©∏ Vasodilata√ß√£o", "üî¥ Eritema", "üíß Edema"],
        "üìå pode_levar": ["ü©π Reparo Tecidual", "üß∂ Fibrose"],
        "üìö exemplo": ["Apendicite aguda"]
    },
    "üíÄ Necrose": {
        "üìù tipos": ["ü™® Coagulativa", "üíß Liquefativa", "üßÄ Caseosa"],
        "üìö exemplo": ["Gangrena em membro diab√©tico"]
    },
    "‚ö∞Ô∏è Apoptose": {
        "üîç diferenciacao": ["‚è±Ô∏è Morte Programada", "üö´ Sem Inflama√ß√£o"],
        "üìö exemplo": ["Involu√ß√£o uterina p√≥s-parto"]
    }
}

# --- Cores e Estilos Aprimorados --- #
CORES = {
    "causa": "#FF6B6B",  # Vermelho
    "sintoma": "#4ECDC4",  # Azul
    "tratamento": "#45B7D1",  # Azul forte
    "diagn√≥stico": "#FFA07A",  # Laranja
    "preven√ß√£o": "#7BC043",  # Verde
    "exemplo": "#A593E0"  # Roxo
}

def get_cor_relacao(relacao):
    relacao = relacao.lower()
    if any(p in relacao for p in ["causa", "leva_a"]): return CORES["causa"]
    elif any(p in relacao for p in ["sintoma", "caracteriza"]): return CORES["sintoma"]
    elif "trata" in relacao: return CORES["tratamento"]
    elif "diagn√≥stico" in relacao: return CORES["diagn√≥stico"]
    elif "previne" in relacao: return CORES["preven√ß√£o"]
    elif "exemplo" in relacao: return CORES["exemplo"]
    return "#6B5B95"  # Cor padr√£o

# --- Fun√ß√µes Aprimoradas --- #
def extrair_texto(file):
    """Extrai texto de arquivos com tratamento de erro melhorado"""
    try:
        if file.type == "application/pdf":
            pdf = PdfReader(file)
            return " ".join(page.extract_text() or "" for page in pdf.pages)
        elif file.type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
            doc = Document(file)
            return "\n".join(p.text for p in doc.paragraphs if p.text.strip())
        elif file.type == "text/plain":
            return file.read().decode("utf-8")
        return ""
    except Exception as e:
        st.error(f"Erro ao extrair texto: {str(e)}")
        return ""

def gerar_proposicoes_offline(texto):
    """Gera rela√ß√µes com exemplos cl√≠nicos"""
    termos_detectados = []
    proposicoes = []
    
    for termo_principal in RELACOES_MEDICAS:
        termo_sem_icone = termo_principal.split()[-1]
        
        if termo_sem_icone.lower() in texto.lower():
            termos_detectados.append(termo_principal)
            
            for relacao, termos in RELACOES_MEDICAS[termo_principal].items():
                for termo in termos:
                    proposicoes.append(f"{termo_principal} -> {relacao} -> {termo}")
    
    if not termos_detectados:
        st.warning("Nenhum termo m√©dico detectado. Usando exemplos pr√©-definidos.")
        for termo_principal in RELACOES_MEDICAS:
            for relacao, termos in RELACOES_MEDICAS[termo_principal].items():
                for termo in termos:
                    proposicoes.append(f"{termo_principal} -> {relacao} -> {termo}")
    
    return "\n".join(proposicoes)

def criar_mapa_avancado(proposicoes, orientacao="retrato"):
    """Cria mapa conceitual com √≠cones e estilo aprimorado"""
    rankdir = "TB" if orientacao == "retrato" else "LR"
    
    grafo = Digraph(
        graph_attr={
            "rankdir": rankdir,
            "bgcolor": "#f9f9f9",
            "fontname": "Arial",
            "splines": "ortho",
            "compound": "true"
        },
        node_attr={
            "shape": "rectangle",
            "style": "filled,rounded",
            "fillcolor": "#ffffff",
            "fontname": "Arial",
            "fontsize": "12",
            "penwidth": "1.5"
        },
        edge_attr={
            "fontname": "Arial",
            "fontsize": "10",
            "penwidth": "1.2"
        }
    )

    if not proposicoes:
        return grafo

    # Agrupar rela√ß√µes por conceito principal
    conceitos = {}
    for linha in proposicoes.split("\n"):
        if "->" in linha:
            partes = [p.strip() for p in linha.split("->")]
            if len(partes) >= 3:
                origem, relacao, destino = partes[0], partes[1], "->".join(partes[2:])
                if origem not in conceitos:
                    conceitos[origem] = []
                conceitos[origem].append((relacao, destino))

    # Criar subgrafos para organiza√ß√£o
    for conceito, relacoes in conceitos.items():
        with grafo.subgraph(name=f"cluster_{conceito}") as sub:
            sub.attr(
                style="filled",
                color="#e0e0e0",
                fillcolor="#f5f5f5",
                label=conceito,
                fontsize="12",
                fontcolor="#333333"
            )
            
            # N√≥ principal com estilo diferente
            sub.node(conceito, 
                    shape="ellipse", 
                    fillcolor="#e6f3ff", 
                    style="filled",
                    penwidth="2.0")
            
            for relacao, destino in relacoes:
                cor = get_cor_relacao(relacao)
                
                # Estilo diferente para exemplos cl√≠nicos
                if "exemplo" in relacao:
                    sub.node(destino, 
                            shape="note", 
                            fillcolor="#f0e6ff",
                            style="filled")
                else:
                    sub.node(destino)
                
                sub.edge(conceito, destino, 
                        label=relacao, 
                        color=cor, 
                        fontcolor=cor,
                        penwidth="1.5")

    return grafo

# --- Fun√ß√µes de Exporta√ß√£o Aprimoradas --- #
def exportar_para_pdf(grafo, orientacao="retrato"):
    """Exporta para PDF com metadados m√©dicos"""
    rankdir = "TB" if orientacao == "retrato" else "LR"
    grafo.graph_attr["rankdir"] = rankdir
    grafo.graph_attr["label"] = "Mapa Conceitual M√©dico\n\n"
    grafo.graph_attr["labelloc"] = "t"
    grafo.graph_attr["fontsize"] = "16"
    
    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmpfile:
        temp_path = tmpfile.name
    
    try:
        grafo.render(temp_path.replace('.pdf', ''), format='pdf', cleanup=True)
        with open(temp_path, 'rb') as f:
            pdf_data = f.read()
        return pdf_data
    finally:
        if os.path.exists(temp_path):
            os.unlink(temp_path)
        if os.path.exists(temp_path.replace('.pdf', '')):
            os.unlink(temp_path.replace('.pdf', ''))

def exportar_para_word(grafo, orientacao="retrato"):
    """Exporta para Word com formata√ß√£o m√©dica"""
    rankdir = "TB" if orientacao == "retrato" else "LR"
    grafo.graph_attr["rankdir"] = rankdir
    
    with tempfile.NamedTemporaryFile(delete=False, suffix=".png") as imgfile:
        img_path = imgfile.name
    
    try:
        grafo.render(img_path.replace('.png', ''), format='png', cleanup=True)
        
        doc = Document()
        doc.add_heading('Mapa Conceitual M√©dico', level=1)
        
        # Cabe√ßalho profissional
        doc.add_paragraph('Gerado por:', style='Heading 2')
        doc.add_paragraph('Sistema de Mapeamento Conceitual M√©dico v2.0')
        doc.add_paragraph(f'Orienta√ß√£o: {orientacao.capitalize()}')
        
        # Adiciona imagem centralizada
        doc.add_picture(img_path, width=docx.shared.Inches(6))
        
        # Rodap√© com refer√™ncias
        doc.add_paragraph().add_run('Refer√™ncias:').bold = True
        doc.add_paragraph('- Robbins & Cotran: Bases Patol√≥gicas das Doen√ßas')
        doc.add_paragraph('- Guyton & Hall: Tratado de Fisiologia M√©dica')
        
        with tempfile.NamedTemporaryFile(delete=False, suffix=".docx") as tmpfile:
            temp_path = tmpfile.name
            doc.save(temp_path)
        
        with open(temp_path, 'rb') as f:
            word_data = f.read()
        return word_data
    finally:
        if os.path.exists(img_path):
            os.unlink(img_path)
        if os.path.exists(img_path.replace('.png', '')):
            os.unlink(img_path.replace('.png', ''))
        if os.path.exists(temp_path):
            os.unlink(temp_path)

# --- Interface Streamlit Aprimorada --- #
def main():
    st.set_page_config(
        page_title="Mapa Conceitual M√©dico Avan√ßado",
        page_icon="ü©∫",
        layout="wide",
        initial_sidebar_state="expanded"
    )

    # Sidebar com informa√ß√µes √∫teis
    with st.sidebar:
        st.title("ü©∫ Ajuda M√©dica")
        st.markdown("""
        **Legenda de √çcones:**
        - ü¶†: Processos patol√≥gicos
        - ü´Å: Condi√ß√µes fisiol√≥gicas
        - üî¨: Mecanismos
        - ‚ö†Ô∏è: Complica√ß√µes
        - üìö: Exemplos cl√≠nicos
        """)
        
        if not GRAPHVIZ_INSTALLED:
            st.warning("""
            **Graphviz n√£o instalado!**
            Para exportar PDF/Word:
            1. [Baixe o Graphviz](https://graphviz.org/download/)
            2. Instale com op√ß√£o "Add to PATH"
            3. Reinicie o aplicativo
            """)

    # P√°gina principal
    st.title("üß† Mapa Conceitual M√©dico Avan√ßado")
    st.markdown("""
    *Ferramenta para organiza√ß√£o visual de conceitos m√©dicos*  
    **Como usar**:  
    1. Insira texto ou fa√ßa upload de arquivos  
    2. Ajuste as configura√ß√µes de visualiza√ß√£o  
    3. Explore as rela√ß√µes conceituais  
    4. Exporte para estudo ou apresenta√ß√£o  
    """)

    # Entradas do usu√°rio
    tab1, tab2 = st.tabs(["‚úçÔ∏è Digitar Texto", "üìÇ Upload de Arquivos"])
    
    with tab1:
        texto_manual = st.text_area("Cole texto m√©dico aqui:", height=300,
                                  placeholder="Ex: Les√µes celulares podem ser revers√≠veis (esteatose) ou irrevers√≠veis (necrose)...")
    
    with tab2:
        arquivos = st.file_uploader("Selecione arquivos (PDF, DOCX, TXT)", 
                                  type=["pdf", "docx", "txt"],
                                  accept_multiple_files=True)

    # Configura√ß√µes avan√ßadas
    with st.expander("‚öôÔ∏è Configura√ß√µes Avan√ßadas"):
        col1, col2 = st.columns(2)
        with col1:
            orientacao = st.radio("Orienta√ß√£o:", ["Retrato", "Paisagem"], index=0)
        with col2:
            if GRAPHVIZ_INSTALLED:
                layout = st.selectbox(
                    "Algoritmo de Layout:",
                    ["dot", "neato", "fdp", "sfdp", "twopi", "circo"],
                    index=0
                )

    # Processamento
    if st.button("üîÑ Gerar Mapa Conceitual", type="primary", use_container_width=True):
        conteudo_total = texto_manual + "\n" if texto_manual else ""
        
        if arquivos:
            with st.spinner("Processando arquivos..."):
                for arquivo in arquivos:
                    conteudo_total += extrair_texto(arquivo) + "\n"
        
        if not conteudo_total.strip():
            st.warning("Por favor, insira texto ou fa√ßa upload de arquivos!")
            st.stop()
        
        with st.spinner("Identificando rela√ß√µes m√©dicas..."):
            proposicoes = gerar_proposicoes_offline(conteudo_total)
        
        st.success("An√°lise conclu√≠da! Visualizando rela√ß√µes...")
        
        # Exibe rela√ß√µes
        with st.expander("üìã Rela√ß√µes Identificadas"):
            st.code(proposicoes)
        
        # Mostra mapa
        st.subheader("üß¨ Visualiza√ß√£o do Mapa Conceitual")
        grafo = criar_mapa_avancado(proposicoes, orientacao.lower())
        
        if GRAPHVIZ_INSTALLED:
            grafo.engine = layout
        
        st.graphviz_chart(grafo, use_container_width=True)
        
        # Bot√µes de download
        st.subheader("üíæ Op√ß√µes de Exporta√ß√£o")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.download_button(
                label="üìù Baixar como DOT",
                data=grafo.source,
                file_name="mapa_medico.dot",
                mime="text/plain",
                help="Formato Graphviz para edi√ß√£o avan√ßada",
                use_container_width=True
            )
        
        with col2:
            if GRAPHVIZ_INSTALLED:
                pdf_data = exportar_para_pdf(grafo, orientacao.lower())
                st.download_button(
                    label="üìÑ Baixar como PDF",
                    data=pdf_data,
                    file_name="mapa_medico.pdf",
                    mime="application/pdf",
                    help="Documento PDF pronto para impress√£o",
                    use_container_width=True
                )
            else:
                st.button(
                    "üìÑ Baixar como PDF (Graphviz necess√°rio)",
                    disabled=True,
                    help="Instale o Graphviz para habilitar esta fun√ß√£o",
                    use_container_width=True
                )
        
        with col3:
            if GRAPHVIZ_INSTALLED:
                word_data = exportar_para_word(grafo, orientacao.lower())
                st.download_button(
                    label="üìë Baixar como Word",
                    data=word_data,
                    file_name="mapa_medico.docx",
                    mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    help="Documento edit√°vel com formata√ß√£o profissional",
                    use_container_width=True
                )
            else:
                st.button(
                    "üìë Baixar como Word (Graphviz necess√°rio)",
                    disabled=True,
                    help="Instale o Graphviz para habilitar esta fun√ß√£o",
                    use_container_width=True
                )

    # Se√ß√£o de exemplos pr√©-definidos
    with st.expander("üß™ Exemplos Cl√≠nicos Prontos"):
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("Caso 1: Les√£o Hep√°tica"):
                st.session_state.texto_exemplo = """
                Paciente masculino, 45 anos, etilista cr√¥nico apresenta:
                - ü¶† Les√£o celular hep√°tica üîÑ Revers√≠vel (esteatose)
                - ‚ò†Ô∏è Toxinas: Etanol
                - ü©π Reparo tecidual com abstin√™ncia
                """
        
        with col2:
            if st.button("Caso 2: Infarto do Mioc√°rdio"):
                st.session_state.texto_exemplo = """
                Paciente feminino, 60 anos, diab√©tica:
                - ü´Å Hip√≥xia mioc√°rdica por aterosclerose
                - üî• Estresse oxidativo ‚Üí üíÄ Necrose ü™® Coagulativa
                - ‚ö†Ô∏è Complica√ß√£o: ÔøΩ Fibrose card√≠aca
                """
        
        if hasattr(st.session_state, 'texto_exemplo'):
            texto_manual = st.text_area("Texto de exemplo:", 
                                      value=st.session_state.texto_exemplo, 
                                      height=150)

if __name__ == "__main__":
    main()